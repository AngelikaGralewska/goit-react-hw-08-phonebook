{"version":3,"file":"static/js/870.c70a7243.chunk.js","mappings":"qMAIaA,EAAS,SAAAC,GAClB,OACI,SAAC,KAAD,CACAC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,mBACVC,aAAc,CACVC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,OAAQ,GAGZC,QAASC,QAAQZ,IAGxB,C,6SCJD,SAASa,EAAUC,GACjB,OACE,UAACC,EAAA,GAAD,gBAAYC,QAAQ,QAAQb,MAAM,iBAAiBc,MAAM,UAAaH,GAAtE,cACG,mBACD,SAACI,EAAA,EAAD,CAAMf,MAAM,UAAUgB,KAAK,mBAA3B,0BAEQ,KACP,IAAIC,MAAOC,cACX,OAGN,CAED,IAAMC,GAAQC,EAAAA,EAAAA,KAEDC,EAAS,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MAenB,OACE,SAACC,EAAA,EAAD,CAAeL,MAAOA,EAAtB,UACE,UAACM,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,IAAI,QANR,WASE,SAACC,EAAA,EAAD,CAAQN,GAAI,CAAEO,EAAG,EAAGC,QAAS,WAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAAC3B,EAAA,EAAD,CAAYc,UAAU,KAAKb,QAAQ,KAAnC,sBAGA,UAACgB,EAAA,EAAD,CAAKH,UAAU,OAAOc,YAAU,EAACC,SAhClB,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBvB,GACEwB,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAqB8DtB,GAAI,CAAEuB,GAAI,GAAnE,WACM,SAACC,EAAA,EAAD,CACEC,aAAa,OACbR,KAAK,OACLS,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,YACNC,WAAS,EACTC,UAAU,WAGZ,SAACP,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNZ,KAAK,QACLQ,aAAa,QACbzB,GAAI,CACFC,UAAW,MAIf,SAACuB,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTV,KAAK,WACLY,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHH,aAAa,eACbzB,GAAI,CACFC,UAAW,MAInB,SAACgC,EAAA,EAAD,CACED,KAAK,SACLL,WAAS,EACT5C,QAAQ,YACRiB,GAAI,CAAEuB,GAAI,EAAGW,GAAI,EAAG1B,QAAQ,WAJ9B,sBAQA,SAAC2B,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,UACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACrD,EAAA,EAAD,CAAMC,KAAK,IAAIH,QAAQ,QAAvB,yDAOR,SAACH,EAAD,CAAWoB,GAAI,CAAEuB,GAAI,SAI5B,EAEYgB,EAAe,WACxB,OAAO,SAAChD,EAAD,GACR,EC3HUiD,EAAe,WACxB,IAAMzE,GAAY0E,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAC1B,OACE,4BACE,SAACC,EAAA,EAAD,WACE,8CAED9E,IAAc4E,IAAS,SAAC7E,EAAA,EAAD,CAAQC,UAAWA,KAC3C,SAACwE,EAAD,MAGL,EAED,G","sources":["components/Loader/Loader.jsx","components/SingUp/SingUp.jsx","pages/RegistrationPages.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Triangle } from \"react-loader-spinner\";\n\nexport const Loader = isLoading => {\n    return (\n        <Triangle\n        height=\"60\"\n        width=\"60\"\n        color=\"#BB2649\"\n        ariaLabel=\"triangle-loading\"\n        wrapperStyle={{\n            position: 'fixed',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            zIndex: 2,\n        }}\n        //wrapperClassName=\"\"\n        visible={Boolean(isLoading)}\n        />\n    );\n};\n\nLoader.propTypes = {\n    isLoading: PropTypes.bool.isRequired,\n  };","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\n//import FormControlLabel from '@mui/material/FormControlLabel';\n//import Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/api';\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport const SignUp = () => {\n    const dispatch = useDispatch();\n  \n    const handleSubmit = event => {\n      event.preventDefault();\n      const form = event.currentTarget;\n      dispatch(\n        register({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      );\n      form.reset();\n    };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap:'15px'\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: '#BB2649' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1} }>\n                <TextField\n                  autoComplete=\"name\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"User Name\"\n                  autoFocus\n                  className='label'\n                />\n\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  sx={{\n                    marginTop: 3,\n                  }}\n                />\n\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  sx={{\n                    marginTop: 3,\n                  }}\n                />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, bgcolor:'#BB2649' }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport const RegisterForm = () => {\n    return <SignUp />;\n  };","import { useSelector } from \"react-redux\";\nimport { selectIsLoading, selectError } from \"redux/selectors\";\nimport { Helmet } from \"react-helmet\";\n\nimport { Loader } from \"components/Loader/Loader\";\nimport { RegisterForm } from \"components/SingUp/SingUp\";\n\nexport const Registration = () => {\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    return (\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        {isLoading && !error && <Loader isLoading={isLoading} />}\n        <RegisterForm />\n      </div>\n    );\n  }\n\n  export default Registration;"],"names":["Loader","isLoading","height","width","color","ariaLabel","wrapperStyle","position","top","left","transform","zIndex","visible","Boolean","Copyright","props","Typography","variant","align","Link","href","Date","getFullYear","theme","createTheme","SignUp","dispatch","useDispatch","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","gap","Avatar","m","bgcolor","LockOutlined","noValidate","onSubmit","event","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","mt","TextField","autoComplete","required","fullWidth","id","label","autoFocus","className","type","Button","mb","Grid","container","justifyContent","item","RegisterForm","Registration","useSelector","selectIsLoading","error","selectError","Helmet"],"sourceRoot":""}