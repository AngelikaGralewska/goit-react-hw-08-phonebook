{"version":3,"file":"static/js/251.489e9fd4.chunk.js","mappings":"gOACA,EAAkC,qCAAlC,EAAwF,oCAAxF,EAA6I,oCAA7I,EAAuM,yCAAvM,EAA4P,+B,SCK/OA,EAAc,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAa9B,OACI,kBAAMC,UAAWC,EAAuBC,SAZrB,SAAAC,GACnBA,EAAMC,iBACL,IAAMC,EAAOF,EAAMG,OAAOD,KAAKE,MACzBC,EAASL,EAAMG,OAAOE,OAAOD,MACnC,GAAIV,EAAQY,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKN,KAAKO,gBAAkBP,EAAKO,aAArC,IACzB,OAAOC,MAAM,GAAD,OAAIR,EAAJ,4BAEdV,GAASmB,EAAAA,EAAAA,IAAW,CAAET,KAAAA,EAAMG,OAAAA,KAC5BL,EAAMG,OAAOS,OACd,EAGA,WACE,mBAAOf,UAAWC,EAAlB,WACE,eAAID,UAAWC,EAAf,oBACE,kBACEe,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRnB,UAAWC,QAGjB,mBAAOD,UAAWC,EAAlB,WACE,eAAID,UAAWC,EAAf,sBACE,kBACEe,KAAK,MACLX,KAAK,SACLY,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRnB,UAAWC,QAGjB,mBAAQe,KAAK,SAAShB,UAAWC,EAAjC,2BAKL,ECjDH,EAA+B,mCAA/B,EAAqF,uCAArF,EAA+I,uCAA/I,EAAqM,mCCUxLmB,EAAe,WAE1B,IAAMzB,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAGtBsB,EAXoB,SAACC,EAAQzB,GACnC,IAAM0B,EAAkBD,EAAOV,cAAcY,OAC7C,OAAO3B,EAAQY,MAAMa,QAAO,SAAAX,GAAI,OAAIA,EAAKN,KAAKO,cAAca,SAASF,EAArC,GACjC,CAQ0BG,EAFV5B,EAAAA,EAAAA,IAAY6B,EAAAA,IAE0B9B,GAEvD,OACE,eAAIG,UAAWC,EAAf,SACCoB,EAAiBO,KAAI,gBAAEC,EAAF,EAAEA,GAAIxB,EAAN,EAAMA,KAAMG,EAAZ,EAAYA,OAAZ,OACpB,gBAAaR,UAAWC,EAAxB,WACE,0BACE,iBAAMD,UAAWC,EAAjB,SAA0CI,KAC1C,iBAAML,UAAWC,EAAjB,SAA0CO,QAE5C,mBACER,UAAWC,EACXe,KAAK,SACLc,QAAS,kBAAMnC,GAASoC,EAAAA,EAAAA,IAAcF,GAA7B,EAHX,iBALOA,EADW,KAiBvB,ECrCD,EAA8B,4BAA9B,EAAwE,4B,UCG1DG,EAAgB,WAC5B,IAAMrC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,mBAAOI,UAAWC,EAAlB,WACE,kDACE,kBACEe,KAAK,OACLX,KAAK,SACL4B,SAAU,SAAA9B,GAAK,OAAIR,GAASuC,EAAAA,EAAAA,IAAU/B,EAAMG,OAAOC,OAApC,EACfP,UAAWC,QAKrB,E,kBCuBF,EA7BkB,WACd,IAAMN,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBoC,GAAYrC,EAAAA,EAAAA,IAAYsC,EAAAA,IACxBC,GAAQvC,EAAAA,EAAAA,IAAYwC,EAAAA,IAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACR5C,GAAS6C,EAAAA,EAAAA,MACV,GAAE,CAAC7C,KAGA,iBAAKK,UAAYC,EAAAA,EAAAA,QAAjB,WACA,eAAID,UAAWC,EAAAA,EAAAA,MAAf,wBACA,SAACP,EAAD,KACA,eAAIM,UAAWC,EAAAA,EAAAA,MAAf,sBACCkC,IAAcE,IAAS,SAACI,EAAA,EAAD,CAAQN,UAAWA,IAC1CtC,EAAQY,MAAMiC,OAAS,GACxB,iCACA,SAACV,EAAD,KACA,SAACZ,EAAD,QAGA,gBAAKpB,UAAWC,EAAAA,EAAAA,KAAhB,yCAMP,C,mBCzCD,KAAgB,MAAQ,qBAAqB,UAAY,yBAAyB,QAAU,uBAAuB,KAAO,oB","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"phonebookInputs\":\"ContactForm_phonebookInputs__zjT0B\",\"phonebookLabel\":\"ContactForm_phonebookLabel__WpDsn\",\"phonebookInput\":\"ContactForm_phonebookInput__SkYR2\",\"phonebookInputTitle\":\"ContactForm_phonebookInputTitle__YqKZ1\",\"buttonAdd\":\"ContactForm_buttonAdd__Mr+ls\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/api';\n\nimport style from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contact = useSelector(selectContacts);\n\n    const handleSubmit = event => {\n      event.preventDefault();\n       const name = event.target.name.value;\n       const number = event.target.number.value;\n       if (contact.items.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n         return alert(`${name} is already in contacts`);\n       }\n       dispatch(addContact({ name, number }));\n       event.target.reset();\n     };\n\n  return (\n      <form className={style.phonebookInputs} onSubmit={handleSubmit}>\n        <label className={style.phonebookLabel}>\n          <h4 className={style.phonebookInputTitle}>Name:</h4>\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              className={style.phonebookInput}\n            />\n        </label>\n        <label className={style.phonebookLabel}>\n          <h4 className={style.phonebookInputTitle}>Number:</h4>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              className={style.phonebookInput}\n            />\n        </label>\n        <button type=\"submit\" className={style.buttonAdd}>\n          add contact\n        </button>\n      </form>\n    );\n  }","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"contactsListItem\":\"ContactsList_contactsListItem__DDy5j\",\"contactsListName\":\"ContactsList_contactsListName__29Mmu\",\"buttonDelete\":\"ContactsList_buttonDelete__oA8JK\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/api';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport PropTypes from 'prop-types';\nimport style from './ContactsList.module.css';\n\nconst getFilteredContacts = (filter, contact) => {\n  const filteredContact = filter.toLowerCase().trim();\n  return contact.items.filter(item => item.name.toLowerCase().includes(filteredContact));\n};\n\nexport const ContactsList = () => {\n\n  const dispatch = useDispatch();\n  const contact = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = getFilteredContacts(filter, contact);\n\nreturn(\n  <ul className={style.contactsList}>\n  {filteredContacts.map(({id, name, number}) => (\n    <li key={id} className={style.contactsListItem}>\n      <p>\n        <span className={style.contactsListName}>{name}</span>\n        <span className={style.contactsListName}>{number}</span>\n      </p>\n      <button\n        className={style.buttonDelete}\n        type=\"submit\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        x\n      </button>\n    </li>\n  ))}\n</ul>\n);\n};\n\n  ContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(\n          PropTypes.shape({\n              id: PropTypes.string.isRequired,\n              name: PropTypes.string.isRequired,\n              phone: PropTypes.string.isRequired,\n          })\n    ),\n  };","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import style from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filtersSlice';\n\n export const FilterContact = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <label className={style.filterLabel}>\n        <p>Find contacts by name</p>\n          <input\n            type=\"text\"\n            name=\"filter\"\n            onChange={event => dispatch(setFilter(event.target.value))}\n            className={style.filterInput}\n          />\n      </label>\n    </div>\n    );\n };","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchContacts } from \"redux/api\";\n\nimport { selectContacts, selectIsLoading, selectError } from \"redux/selectors\";\n\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\nimport { FilterContact } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\n\nimport style from \"./Pages.module.css\"\n\n const Contacts = () => {\n    const dispatch = useDispatch();\n    const contact = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return(\n        <div className= {style.mainDiv} >\n        <h1 className={style.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={style.title}>Contacts</h2>\n        {isLoading && !error && <Loader isLoading={isLoading} />}\n        {contact.items.length > 0 ? (\n        <>\n        <FilterContact />\n        <ContactsList />\n        </>\n      ) : (\n        <div className={style.text}>\n          Your phone book is empty.\n        </div>\n      )}\n      </div> \n    );\n};\nexport default Contacts;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Pages_title__QY64X\",\"titleHome\":\"Pages_titleHome__SKGIw\",\"mainDiv\":\"Pages_mainDiv__Z08fg\",\"text\":\"Pages_text__3EfdT\"};"],"names":["ContactForm","dispatch","useDispatch","contact","useSelector","selectContacts","className","style","onSubmit","event","preventDefault","name","target","value","number","items","find","item","toLowerCase","alert","addContact","reset","type","pattern","title","required","ContactsList","filteredContacts","filter","filteredContact","trim","includes","getFilteredContacts","selectFilter","map","id","onClick","deleteContact","FilterContact","onChange","setFilter","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Loader","length"],"sourceRoot":""}